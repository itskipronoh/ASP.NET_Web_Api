// <auto-generated />
using System.Collections.Generic;
using ContosoPizza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ContosoPizza.Migrations
{
    [DbContext(typeof(PizzaDbContext))]
    [Migration("20251027094710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ContosoPizza.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Toppings")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fresh tomato sauce, mozzarella, and basil",
                            ImageUrl = "https://example.com/margherita.jpg",
                            IsGlutenFree = false,
                            Name = "Classic Margherita",
                            Price = 12.99m,
                            Size = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Loaded with pepperoni and extra cheese",
                            ImageUrl = "https://example.com/pepperoni.jpg",
                            IsGlutenFree = false,
                            Name = "Pepperoni Deluxe",
                            Price = 15.99m,
                            Size = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fresh vegetables on a gluten-free crust",
                            ImageUrl = "https://example.com/veggie.jpg",
                            IsGlutenFree = true,
                            Name = "Veggie Supreme",
                            Price = 14.99m,
                            Size = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "For the carnivores - pepperoni, sausage, bacon, and ham",
                            ImageUrl = "https://example.com/meatlover.jpg",
                            IsGlutenFree = false,
                            Name = "Meat Lovers",
                            Price = 18.99m,
                            Size = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ham and pineapple on a crispy crust",
                            ImageUrl = "https://example.com/hawaiian.jpg",
                            IsGlutenFree = false,
                            Name = "Hawaiian Paradise",
                            Price = 13.99m,
                            Size = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Grilled chicken with BBQ sauce and red onions",
                            ImageUrl = "https://example.com/bbq-chicken.jpg",
                            IsGlutenFree = false,
                            Name = "BBQ Chicken",
                            Price = 16.99m,
                            Size = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
